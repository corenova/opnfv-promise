// Generated by CoffeeScript 1.8.0
(function() {
  var StormForge, stormify,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  stormify = require('stormify');

  StormForge = (function(_super) {
    __extends(StormForge, _super);

    function StormForge() {
      return StormForge.__super__.constructor.apply(this, arguments);
    }

    StormForge.prototype.alias = 'stormforge';

    StormForge.Provider = require('./models/stormforge-resource-provider');

    StormForge.Pool = require('./models/stormforge-resource-pool');

    StormForge.Reservation = require('./models/stormforge-resource-reservation');

    StormForge.Resource = require('./models/stormforge-resource');

    StormForge.Asset = require('./models/stormforge-asset');

    StormForge.prototype.resourceProviders = StormForge.hasMany(StormForge.Provider);

    StormForge.prototype.providerServices = StormForge.hasMany(StormForge.Provider.Service);

    StormForge.prototype.resourceElements = StormForge.hasMany(StormForge.Provider.Service.Element);

    StormForge.prototype.resourcePools = StormForge.hasMany(StormForge.Pool);

    StormForge.prototype.reservations = StormForge.hasMany(StormForge.Reservation);

    StormForge.prototype.resources = StormForge.hasMany(StormForge.Resource);

    StormForge.prototype.assets = StormForge.hasMany(StormForge.Asset);

    return StormForge;

  })(stormify.DS);

  module.exports = StormForge;

}).call(this);
