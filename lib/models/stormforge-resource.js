// Generated by CoffeeScript 1.8.0
(function() {
  var DS, StormForgeResource,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  DS = require('../stormforge');

  StormForgeResource = (function(_super) {
    __extends(StormForgeResource, _super);

    function StormForgeResource() {
      return StormForgeResource.__super__.constructor.apply(this, arguments);
    }

    StormForgeResource.prototype.name = StormForgeResource.attr('string', {
      required: true
    });

    StormForgeResource.prototype.provider = StormForgeResource.belongsTo(DS.ResourceProvider, {
      required: true
    });

    StormForgeResource.prototype.flavor = StormForgeResource.belongsTo(DS.ResourceElement);

    StormForgeResource.prototype.image = StormForgeResource.belongsTo(DS.ResourceElement);

    StormForgeResource.prototype.networks = StormForgeResource.hasMany(DS.ResourceElement);

    StormForgeResource.prototype.asset = StormForgeResource.belongsTo(DS.Asset);

    StormForgeResource.prototype.isActive = StormForgeResource.computed((function() {
      try {
        return this.get('asset').get('isActive');
      } catch (_error) {
        return false;
      }
    }), {
      property: 'asset.isActive'
    });

    return StormForgeResource;

  })(DS.Model);

  module.exports = StormForgeResource;

}).call(this);
